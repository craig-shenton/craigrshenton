---
title: "2022 NormConf - My favourite talks"
description: "Lessons from real-life data science practitioners"
date: "2022-12-20"
categories: [listicle, learning, spark, art, simulation]
---

# 2022 NormConf
[NormConf](https://normconf.com/) is a free, virtual tech conference created by [Vicki Boykis](https://vickiboykis.com/) with a keen focus on all the unglamourous challenges that real-life data science practitioners encounter in their day-to-day work. In an arena where many other tech conferences focus on the latest and greatest, this conference is a breath of fresh air! I can sincerely share that I found more ideas to bring back to try at my work from this conference than any previous conference I have attended.

![](https://normconf.com/images/normconf_banner.png)

The conference was held in a single day, split between 3 sessions and several lightning talks. Each session had about 10 speakers covering a variety of topics. All of these are available for free on [NormConf's youtube channel](https://www.youtube.com/@normconf).

I spent the weekend catching up on all the talks and wanted to share a couple of my favourites:

# Session 1

## [Spark Horror Stories From The Field](https://www.youtube.com/watch?v=DxUb8gRcASg) by [Guenia Izquierdo](https://www.linkedin.com/in/guenia/)

This talk right here is totally my jam. [Apache Spark](https://spark.apache.org/) is an amazing tool. In fact, to conduct and model experiments for a large-scale business operation (like I do for work), the usage of Spark is pretty much [table stakes](https://en.wiktionary.org/wiki/table_stakes#:~:text=Noun,let%20alone%20ensure%20a%20win). That said, like many powerful tools, Spark is also a frustrating [footgun](https://www.urbandictionary.com/define.php?term=footgun).

Guenia shares her experience on common pitfalls you might encounter when building Spark applications for the 1st time. I found myself nodding silently as she went through every mistake that I personally faced when I first started learning Spark. Additionally, she gives useful tips explaining the implications for each Spark command you invoke which promotes a better understanding of the entire Spark framework.

If you are new to Spark, I have to recommend the first couple of minutes of Guenia's talk as she provides one of the clearest and most succint crash course to Spark I have seen presented.

## [A Game of Construction](https://www.youtube.com/watch?v=n6FUXTDNKKQ) by [Helena Sarin](https://twitter.com/NeuralBricolage) 

> Art is all a game of construction. Some with the brush, some with the shovel, some choose the pen and some of us ... choose **neural networks**

That quote up thre is how Helena started her talk ü§Ø and boy was I absolutely blown away. Describing herself as an "engineering-artist", Helena shared details and examples of her artwork and art process. I was deeply inspired by the many similarities Helena drew between the process of refining art work with the iterative nature of building complex models. 

I have always enjoyed the rare occasion where I get to [play with generative art](https://www.ddanieltan.com/posts/boogiewoogie/), and listening to a true artist's artist share about her process was an incredible treat.

# Session 2

## [ML doesn't always replace rules, sometimes they work together](https://www.youtube.com/watch?v=gXe9iXNTuDc) by [Jeremy Jordan](https://twitter.com/jeremyjordan)

Jeremy's talk touches upon a very real set of skills required to run machine learning solutions in a highly regulated environment such as a bank or financial institution. I really enjoyed the nuance Jeremy's talk provides to how we can combine rules based heuristics and machine learning into a robust policy layer. 

As with any complex solution, the talk is less of a how-to but more of a framework of discussions you should be looking to have if your team is building a solution that matches this use case.

## [Ethan Rosenthal and the M1 Misadventure](https://www.youtube.com/watch?v=I4wkCSd7iMM) by [Ethan Rosenthal](https://twitter.com/eprosenthal)

Ethan's M1 Misadventure covers all the trials and tribulations he went through to get his team's codebase built on the new M1 Macs, and what can I say... A story about chasing obscure errors, finicky dependencies and the endless loop of upgrading/downgrading/backtracking changes just to get something work? That's both my guilty pleasure üçøüçø, as well as, an average work day ü•≤. 

Ethan makes sure to share some useful tips about Python environments and dependency management too if you're looking for tips in that category. I enjoyed this talk mostly because it validates that getting that darn code to compile/run is a common problem for any data scientist.

::: {.column-margin}
They don't call it [dependency hell](https://en.wikipedia.org/wiki/Dependency_hell) for nothing üòàüòàüòà
:::

# Session 3

## [How many folds is too many? Efficient simulation for everyday ML decisions](https://www.youtube.com/watch?v=VeLAHateMIM) by [Julia Silge](https://juliasilge.com/)

Whereas most of the other talks I've shared thus far are broadly inpsirational and entertaining, Julia's talk is something I could bring directly back to my everyday work. Julia's talk approaches a question that many new data science learners have but is hard to answer - When performing cross validation, how many folds is too many? And while Julia devotes a good amount of time approaching that question, what her talk really illustrates is how do you break down a question and empirically approach a solution via simulation.

:::{.column-margin}
...unless you cop out with an answer like "it depends" üôÑ
:::

Simulation is such a powerful tool that goes beyond just the introduction of resampling and bootstraps. Simulation is a paradigm that empowers you to structure your belief of how a system works explicitly as a model, and validate those assumptions with real data. I have found so many areas of my work where approaching the thorny problem through the [lens of simulation](https://www.ddanieltan.com/posts/some2/) has clarified my understanding of viable solutions. 

If you have only time for 1 talk, this would be my recommendation.

## [Don't do invisible work](https://www.youtube.com/watch?v=HiF83i1OLOM) by [Chris Albon](https://twitter.com/chrisalbon)

This is slightly nostalgic for me as Chris's [data science notes](https://chrisalbon.com/) was 1 of the first data science focused resource I chanced upon when first entering the field, and it felt really great to hear Chris's talk. Chris's talk focuses on the importance of not doing invisible work and sharing various tips on how you can systematically log the important milestones you achieved and impact for the business you have created.

While there is a clear connection between this talk and your career as a data scientist, I like to think that this practice of putting your work out there also has benefits from a learning angle. Reflecting on the short time I have committed to sharing articles on this blog, I can clearly see the improvement in my clarity of writing and ability to articulate ideas. Beyond the benefits to your career, ensuring you are not doing invisible work is also a very important step to **take charge of your own learning**.

# Lightning Talks

## [Hell is other people's bugs](https://www.youtube.com/watch?v=wymQT_03-H4) by [TJ Murphy](https://twitter.com/teej_m)

TJ's lightning talk covers all the common bugs he has seen in experimental platforms. The blind spot here is that while the statistical theory of which ever method you choose might be infallible, the implementation of said method in live experiments is not. As this is precisely the niche area of data science I work in, this talk was pretty much an instant-share for me.

## [How to name files](https://youtu.be/ES1LTlnpLMk) by [Jenny Bryan](https://twitter.com/JennyBryan)

If there was ever 1 topic that anyone, and yes, I mean anyone who works in tech has an opinion on, it's about the right way of naming files. Jenny's talk covers her recommendations (I agree with them ... mostly). This talk is the one that best fits the "normcore" spirit of the entire conference, you **have** to watch it.

# Conclusion

üéâüéâ Congrats and well done to everyone who made Normconf 2022 a success! It was truly my favourite conference this year.

## Appendix {.appendix}
```{python}
#| echo: false
from datetime import date
print(f"Last updated: {date.today().strftime('%d %B %y')}")
```
<blockquote>
```{python}
#| echo: false
import random
import textwrap
with open("../../quotes.txt") as f:
    quotes = f.readlines()
quotes = [q.strip() for q in quotes]
res = random.choice(quotes)
print("\n".join(textwrap.wrap(res)))
```
</blockquote>